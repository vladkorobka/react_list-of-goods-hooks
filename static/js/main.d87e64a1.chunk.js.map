{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","SortType","App","selectedSort","setSelectedSort","useState","isReverse","setIsReverse","sortedGoods","SORT_ALPHABETICALLY","sort","good1","good2","localeCompare","SORT_LENGTH","length","reverse","_jsxs","className","children","_jsx","type","cn","onClick","handleClickReset","map","good","ReactDOM","render","document","getElementById"],"mappings":"wOAMO,MAAMA,EAA4B,CACvC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UACA,IAEGC,EAAQ,SAARA,GAAQ,OAARA,EAAQ,0CAARA,EAAQ,6BAARA,CAAQ,EAARA,GAAQ,IAKN,MAAMC,EAAgBA,KAC3B,MAAOC,EAAcC,GAAmBC,mBAAS,KAC1CC,EAAWC,GAAgBF,oBAAS,GAC3C,IAAIG,EAAc,IAAIR,GAEtB,GAAIG,EAAc,CAChB,OAAQA,GACN,KAAKF,EAASQ,oBACZD,EAAcA,EAAYE,MAAK,CAACC,EAAOC,IACrCD,EAAME,cAAcD,KAEtB,MAEF,KAAKX,EAASa,YACZN,EAAcA,EAAYE,MAAK,CAACC,EAAOC,IACrCD,EAAMI,OAASH,EAAMG,SAQvBT,GACFE,EAAYQ,SAEhB,EAEKb,GAAgBG,GACnBE,EAAYQ,UAQd,OACEC,eAAA,OAAKC,UAAU,kBAAiBC,SAAA,CAC9BF,eAAA,OAAKC,UAAU,UAASC,SAAA,CACtBC,cAAA,UACEC,KAAK,SACLH,UACEI,IAAG,SAAU,UACX,CAAE,WAAYnB,IAAiBF,EAASQ,sBAE5Cc,QAASA,IAAMnB,EAAgBH,EAASQ,qBAAqBU,SAC9D,wBAIDC,cAAA,UACEC,KAAK,SACLH,UACEI,IAAG,SAAU,aACX,CAAE,WAAYnB,IAAiBF,EAASa,cAE5CS,QAASA,IAAMnB,EAAgBH,EAASa,aAAaK,SACtD,mBAIDC,cAAA,UACEC,KAAK,SACLH,UACEI,IAAG,SAAU,aACX,CAAE,YAAahB,IAEnBiB,QAASA,IAAMhB,GAAcD,GAAWa,SACzC,aAIChB,GAAgBG,IAEdc,cAAA,UACEC,KAAK,SACLH,UAAU,4BACVK,QA9CaC,KACvBpB,EAAgB,IAChBG,GAAa,EAAM,EA4CiBY,SAC3B,aAMPC,cAAA,MAAAD,SACEC,cAAA,MAAAD,SACGX,EAAYiB,KAAIC,GACfN,cAAA,MAAI,UAAQ,OAAMD,SAAaO,GAAPA,WAI1B,EChHVC,IAASC,OACPR,cAAClB,EAAG,IACJ2B,SAASC,eAAe,Q","file":"static/js/main.d87e64a1.chunk.js","sourcesContent":["import cn from 'classnames';\n\nimport React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  SORT_ALPHABETICALLY = 'Sort alphabetically',\n  SORT_LENGTH = 'Sort by length',\n}\n\nexport const App: React.FC = () => {\n  const [selectedSort, setSelectedSort] = useState('');\n  const [isReverse, setIsReverse] = useState(false);\n  let sortedGoods = [...goodsFromServer];\n\n  if (selectedSort) {\n    switch (selectedSort) {\n      case SortType.SORT_ALPHABETICALLY:\n        sortedGoods = sortedGoods.sort((good1, good2) => (\n          good1.localeCompare(good2)\n        ));\n        break;\n\n      case SortType.SORT_LENGTH:\n        sortedGoods = sortedGoods.sort((good1, good2) => (\n          good1.length - good2.length\n        ));\n        break;\n\n      default:\n        break;\n    }\n\n    if (isReverse) {\n      sortedGoods.reverse();\n    }\n  }\n\n  if (!selectedSort && isReverse) {\n    sortedGoods.reverse();\n  }\n\n  const handleClickReset = () => {\n    setSelectedSort('');\n    setIsReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            cn('button', 'is-info',\n              { 'is-light': selectedSort !== SortType.SORT_ALPHABETICALLY })\n          }\n          onClick={() => setSelectedSort(SortType.SORT_ALPHABETICALLY)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn('button', 'is-success',\n              { 'is-light': selectedSort !== SortType.SORT_LENGTH })\n          }\n          onClick={() => setSelectedSort(SortType.SORT_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn('button', 'is-warning',\n              { 'is-light': !isReverse })\n          }\n          onClick={() => setIsReverse(!isReverse)}\n        >\n          Reverse\n        </button>\n\n        {(selectedSort || isReverse)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={handleClickReset}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        <ul>\n          {sortedGoods.map(good => (\n            <li data-cy=\"Good\" key={good}>{good}</li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","// import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}